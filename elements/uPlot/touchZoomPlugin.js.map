{"version":3,"file":"touchZoomPlugin.js","sourceRoot":"","sources":["touchZoomPlugin.ts"],"names":[],"mappings":"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","sourcesContent":["import uPlot from \"uplot\";\r\n\r\n\r\ntype Position = {\r\n    x: number,\r\n    y: number,\r\n    dx: number,\r\n    dy: number,\r\n    d: number\r\n};\r\nfunction storePos(t:Position, e:TouchEvent, rect:DOMRect) {\r\n    let ts = e.touches;\r\n\r\n    let t0 = ts[0];\r\n    let t0x = t0.clientX - rect.left;\r\n    let t0y = t0.clientY - rect.top;\r\n\r\n    if (ts.length === 1) {\r\n        t.x = t0x;\r\n        t.y = t0y;\r\n        t.d = 1;\r\n        t.dx = 1;\r\n        t.dy = 1;\r\n    } else {\r\n        let t1 = e.touches[1];\r\n        let t1x = t1.clientX - rect.left;\r\n        let t1y = t1.clientY - rect.top;\r\n\r\n        let xMin = Math.min(t0x, t1x);\r\n        let yMin = Math.min(t0y, t1y);\r\n        let xMax = Math.max(t0x, t1x);\r\n        let yMax = Math.max(t0y, t1y);\r\n\r\n        // midpts\r\n        t.y = (yMin + yMax) / 2;\r\n        t.x = (xMin + xMax) / 2;\r\n\r\n        t.dx = xMax - xMin;\r\n        t.dy = yMax - yMin;\r\n\r\n        // dist\r\n        t.d = Math.sqrt(t.dx * t.dx + t.dy * t.dy);\r\n    }\r\n}\r\nfunction clamp(nRange: number, nMin: number, nMax: number, fRange:number, fMin:number, fMax:number) {\r\n    if (nRange > fRange) {\r\n        nMin = fMin;\r\n        nMax = fMax;\r\n    } else if (nMin < fMin) {\r\n        nMin = fMin;\r\n        nMax = fMin + nRange;\r\n    } else if (nMax > fMax) {\r\n        nMax = fMax;\r\n        nMin = fMax - nRange;\r\n    }\r\n\r\n    return [nMin, nMax];\r\n}\r\n\r\n/**\r\n * Plugin for uPlot for zooming in and out with touch\r\n */\r\nexport function touchZoomPlugin({xZoom = false, yZoom = false}):uPlot.Plugin {\r\n    let xMin: number;\r\n    let xMax: number;\r\n    let yMin: number;\r\n    let yMax: number;\r\n    let xRange: number;\r\n    let yRange: number;\r\n    let rect: DOMRect;\r\n\r\n    return {\r\n        hooks: {\r\n            setData: (u) => {\r\n                xMin = u.data[0][0];\r\n                xMax = u.data[0][u.data[0].length - 1];\r\n                yMin = u.scales.y.min;\r\n                yMax = u.scales.y.max;\r\n\r\n                xRange = xMax - xMin;\r\n                yRange = yMax - yMin;\r\n                let plot = u.over;\r\n                rect = plot.getBoundingClientRect();\r\n            },\r\n            init:(u)=>{\r\n                let over = u.over;\r\n                let oxRange: number;\r\n                let oyRange: number;\r\n                let xVal: number;\r\n                let yVal: number;\r\n                let fr: Position = {x: 0, y: 0, dx: 0, dy: 0, d: 1};\r\n                let to: Position = {x: 0, y: 0, dx: 0, dy: 0, d: 1};\r\n\r\n\r\n\r\n                let rafPending = false;\r\n\r\n                function zoom() {\r\n                    rafPending = false;\r\n\r\n                    let left = to.x;\r\n                    let top = to.y;\r\n\r\n                    // non-uniform scaling\r\n                    //\tlet xFactor = fr.dx / to.dx;\r\n                    //\tlet yFactor = fr.dy / to.dy;\r\n\r\n                    // uniform x/y scaling\r\n                    let xFactor = fr.d / to.d;\r\n                    let yFactor = fr.d / to.d;\r\n\r\n                    let leftPct = left / rect.width;\r\n                    let btmPct = 1 - top / rect.height;\r\n\r\n                    let nxRange = oxRange * xFactor;\r\n                    let nxMin = xVal - leftPct * nxRange;\r\n                    let nxMax = nxMin + nxRange;\r\n                    [nxMin, nxMax] = clamp(nxRange, nxMin, nxMax, xRange, xMin, xMax);\r\n\r\n                    let nyRange = oyRange * yFactor;\r\n                    let nyMin = yVal - btmPct * nyRange;\r\n                    let nyMax = nyMin + nyRange;\r\n                    [nyMin, nyMax] = clamp(nyRange, nyMin, nyMax, yRange, yMin, yMax);\r\n\r\n                    u.batch(() => {\r\n                        if (xZoom) {\r\n                            u.setScale(\"x\", {\r\n                                min: nxMin,\r\n                                max: nxMax,\r\n                            });\r\n                        }\r\n                        if (yZoom) {\r\n                            u.setScale(\"y\", {\r\n                                min: nyMin,\r\n                                max: nyMax,\r\n                            });\r\n                        }\r\n                    });\r\n                }\r\n\r\n                function touchmove(event:TouchEvent) {\r\n                    storePos(to, event, rect);\r\n\r\n                    if (!rafPending) {\r\n                        rafPending = true;\r\n                        requestAnimationFrame(zoom);\r\n                    }\r\n                }\r\n\r\n                over.addEventListener(\"touchstart\",  (event:TouchEvent)=> {\r\n                    event.preventDefault();/*to prevent zoom and movement*/\r\n                    rect = over.getBoundingClientRect();\r\n\r\n                    storePos(fr, event, rect);\r\n\r\n                    oxRange = u.scales.x.max - u.scales.x.min;\r\n                    oyRange = u.scales.y.max - u.scales.y.min;\r\n\r\n                    let left = fr.x;\r\n                    let top = fr.y;\r\n\r\n                    xVal = u.posToVal(left, \"x\");\r\n                    yVal = u.posToVal(top, \"y\");\r\n\r\n                    document.addEventListener(\"touchmove\", touchmove, {passive: true});\r\n                });\r\n\r\n                over.addEventListener(\"touchend\", (event)=> {\r\n                    document.removeEventListener(\"touchmove\", touchmove);\r\n                });\r\n            }\r\n        }\r\n    };\r\n}"]}