{"version":3,"file":"wheelZoomPlugin.js","sourceRoot":"","sources":["wheelZoomPlugin.ts"],"names":[],"mappings":"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","sourcesContent":["import {throttle} from \"./throttle.js\";\r\nimport uPlot from \"uplot\";\r\n\r\nfunction clamp(nRange: number, nMin: number, nMax: number, fRange:number, fMin:number, fMax:number) {\r\n    if (nRange > fRange) {\r\n        nMin = fMin;\r\n        nMax = fMax;\r\n    } else if (nMin < fMin) {\r\n        nMin = fMin;\r\n        nMax = fMin + nRange;\r\n    } else if (nMax > fMax) {\r\n        nMax = fMax;\r\n        nMin = fMax - nRange;\r\n    }\r\n\r\n    return [nMin, nMax];\r\n}\r\n\r\n/**\r\n * Plugin for uPlot for zooming in and out with mouse wheel <br/>\r\n * The factor is the ratio of wheel to pixels. Default value is 0.75\r\n */\r\nexport function wheelZoomPlugin({factor = 0.75, xZoom = false, yZoom = false}):uPlot.Plugin {\r\n\r\n    let xMin: number;\r\n    let xMax: number;\r\n    let yMin: number;\r\n    let yMax: number;\r\n    let xRange: number;\r\n    let yRange: number;\r\n    let rect: DOMRect;\r\n\r\n    return {\r\n        hooks: {\r\n            setSize: (u) => {\r\n                let plot = u.over;\r\n                rect = plot.getBoundingClientRect();\r\n            },\r\n            setData: (u) => {\r\n                xMin = u.data[0][0];\r\n                xMax = u.data[0][u.data[0].length - 1];\r\n                yMin = u.scales.y.min;\r\n                yMax = u.scales.y.max;\r\n\r\n                xRange = xMax - xMin;\r\n                yRange = yMax - yMin;\r\n                let plot = u.over;\r\n                rect = plot.getBoundingClientRect();\r\n            },\r\n            ready: u => {\r\n                xMin = u.scales.x.min;\r\n                xMax = u.scales.x.max;\r\n                yMin = u.scales.y.min;\r\n                yMax = u.scales.y.max;\r\n\r\n                xRange = xMax - xMin;\r\n                yRange = yMax - yMin;\r\n                let plot = u.over;\r\n                rect = plot.getBoundingClientRect();\r\n\r\n                // wheel drag pan\r\n                plot.addEventListener(\"mousedown\", (e:MouseEvent) => {\r\n                    if (e.button === 0) {\r\n                        e.preventDefault();\r\n\r\n                        let left0 = e.clientX;\r\n                        //\tlet top0 = e.clientY;\r\n                        let scXMin0 = u.scales.x.min;\r\n                        let scXMax0 = u.scales.x.max;\r\n\r\n                        let xUnitsPerPx = u.posToVal(1, 'x') - u.posToVal(0, 'x');\r\n\r\n                        function onMove(e: MouseEvent) {\r\n                            let left1 = e.clientX;\r\n                            let dx = xUnitsPerPx * (left1 - left0);\r\n                            if (xMin > scXMin0 - dx || xMax < scXMax0 - dx) {\r\n                                //left0 = e.clientX;\r\n                                if (u.series[0].min === u.scales.x.min || u.series[0].max === u.scales.x.max) {\r\n                                    return;\r\n                                }\r\n                            }\r\n                            u.setScale('x', {\r\n                                min: Math.max(xMin, scXMin0 - dx),\r\n                                max: Math.min(xMax, scXMax0 - dx),\r\n                            });\r\n                        }\r\n\r\n                        let throttleMouseMove = throttle(onMove);\r\n\r\n                        function onUp() {\r\n                            document.removeEventListener(\"mousemove\", throttleMouseMove);\r\n                            document.removeEventListener(\"mouseup\", onUp);\r\n                        }\r\n\r\n                        document.addEventListener(\"mousemove\", throttleMouseMove);\r\n                        document.addEventListener(\"mouseup\", onUp);\r\n                    }\r\n                });\r\n\r\n                function mouseWheel(e:WheelEvent) {\r\n                    e.preventDefault();\r\n\r\n                    let {left, top} = u.cursor;\r\n\r\n                    let leftPct = left / rect.width;\r\n                    let btmPct = 1 - top / rect.height;\r\n                    let xVal = u.posToVal(left, \"x\");\r\n                    let yVal = u.posToVal(top, \"y\");\r\n                    let oxRange = u.scales.x.max - u.scales.x.min;\r\n                    let oyRange = u.scales.y.max - u.scales.y.min;\r\n\r\n                    let nxRange = e.deltaY < 0 ? oxRange * factor : oxRange / factor;\r\n                    let nxMin = xVal - leftPct * nxRange;\r\n                    let nxMax = nxMin + nxRange;\r\n                    [nxMin, nxMax] = clamp(nxRange, nxMin, nxMax, xRange, xMin, xMax);\r\n\r\n                    let nyRange = e.deltaY < 0 ? oyRange * factor : oyRange / factor;\r\n                    let nyMin = yVal - btmPct * nyRange;\r\n                    let nyMax = nyMin + nyRange;\r\n                    [nyMin, nyMax] = clamp(nyRange, nyMin, nyMax, yRange, yMin, yMax);\r\n\r\n                    u.batch(() => {\r\n                        if (xZoom) {\r\n                            u.setScale('x', {\r\n                                min: nxMin,\r\n                                max: nxMax,\r\n                            });\r\n                        }\r\n                        if (yZoom) {\r\n                            u.setScale(\"y\", {\r\n                                min: nyMin,\r\n                                max: nyMax,\r\n                            });\r\n                        }\r\n                    });\r\n                }\r\n                // wheel scroll zoom\r\n                plot.addEventListener(\"wheel\", throttle(mouseWheel));\r\n            }\r\n        }\r\n    };\r\n}"]}